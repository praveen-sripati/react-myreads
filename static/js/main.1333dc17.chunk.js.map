{"version":3,"sources":["icons/searchEmptyState.png","BooksAPI.js","sections/Header/Header.tsx","sections/Footer/Footer.tsx","sections/Shelves/Shelf/components/Book.tsx","sections/Search/SearchList.tsx","sections/BookPage/BookPage.tsx","sections/NotFound/NotFound.tsx","sections/Shelves/Shelf/Shelf.tsx","sections/Shelves/Shelves.tsx","App.tsx","serviceWorker.ts","index.tsx","icons/No_books.png"],"names":["module","exports","api","token","localStorage","Math","random","toString","substr","headers","update","book","shelf","fetch","id","method","body","JSON","stringify","then","res","json","search","query","data","books","Header","Layout","LayoutHeader","className","to","process","Footer","LayoutFooter","href","target","GithubOutlined","LinkedinFilled","Meta","Card","Book","onMoveBook","showBook","useState","isClicked","clickCard","setClickCard","menu","onClick","event","key","Item","disabled","style","fontWeight","role","aria-label","card","persist","localName","bordered","hoverable","width","cover","alt","src","imageLinks","thumbnail","title","description","subtitle","length","slice","concat","overlay","type","shape","icon","DownCircleFilled","size","push","Content","SearchList","onShowBook","searchState","setSearchState","filteredBooks","setFilteredBooks","searchBooks","a","searchedBooks","emptyState","noSearchEmptyState","name","placeholder","onChange","value","position","left","top","height","ArrowLeftOutlined","Array","isArray","map","Title","Typography","Text","BookPage","notGiven","smallThumbnail","level","authors","publishedDate","marginBottom","averageRating","defaultValue","round","ratingsCount","infoLink","NotFound","status","subTitle","extra","Shelf","noReadData","noWantToReadData","noCurrentlyReadingData","emptyDescription","display","shelfName","image","NoBooksPlaceholder","imageStyle","Shelves","state","currentlyReading","wantToRead","read","App","loading","setState","showBookState","setShowBookState","getAllBooks","currentlyReadingData","wantToReadData","readData","useEffect","moveBook","useCallback","exact","path","right","bottom","PlusOutlined","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1333dc17.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/searchEmptyState.706ab192.png\";","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react';\nimport { Layout, Affix } from 'antd';\nimport { Link } from 'react-router-dom';\n\nconst { Header } = Layout;\n\nexport const LayoutHeader = () => {\n  return (\n    <Affix className=\"header-affix\">\n      <Header className=\"header\">\n        <Link to={`${process.env.PUBLIC_URL}/`}>\n          <span className=\"logo\">MyReads</span>\n        </Link>\n      </Header>\n    </Affix>\n  );\n};\n","import React from 'react';\nimport { Layout } from 'antd';\nimport {\n  GithubOutlined,\n  LinkedinFilled,\n} from '@ant-design/icons';\n\nconst { Footer } = Layout;\n\nexport const LayoutFooter = () => {\n  return (\n    <Footer className=\"footer-author-description\">\n      <span>Created by Praveen Sripati </span>\n      <a href=\"https://github.com/praveen-sripati\" target=\"blank\">\n        <GithubOutlined className=\"footer-author-description__icon\" />\n      </a>\n      <a href=\"https://in.linkedin.com/in/praveen-sripati\" target=\"blank\">\n        <LinkedinFilled className=\"footer-author-description__icon\" />\n      </a>\n    </Footer>\n  );\n};\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Card, Button, Menu, Dropdown } from 'antd';\nimport { DownCircleFilled } from '@ant-design/icons';\nimport { TypeBook } from '../../../../lib/types';\n\ninterface Props {\n  book: TypeBook;\n  onMoveBook: (book: TypeBook, shelfName: string) => void;\n  showBook: (book: TypeBook) => void;\n}\n\ninterface EventObject {\n  key: string;\n}\n\nconst { Meta } = Card;\n\nexport const Book = ({ book, onMoveBook, showBook }: Props) => {\n  const [clickCard, setClickCard] = useState({ isClicked: false });\n\n  const handleCardClick = (event: any) => {\n    event.persist();\n    if (\n      !(\n        event.target.localName === 'button' ||\n        event.target.localName === 'path' ||\n        event.target.localName === 'li'\n      )\n    ) {\n      setClickCard({ isClicked: true });\n      showBook(book);\n    }\n  };\n\n  const handleMenuClick = (event: EventObject) => {\n    setClickCard({ isClicked: false });\n    switch (event.key) {\n      case '1':\n        onMoveBook(book, 'currentlyReading');\n        break;\n      case '2':\n        onMoveBook(book, 'wantToRead');\n        break;\n      case '3':\n        onMoveBook(book, 'read');\n        break;\n      default:\n        break;\n    }\n  };\n\n  const menu = (\n    <Menu onClick={handleMenuClick}>\n      <Menu.Item key=\"0\" disabled style={{fontWeight: \"bolder\"}}>Move To <span role=\"img\" aria-label=\"Down hand emoji\">👇</span></Menu.Item>\n      <Menu.Item key=\"1\">Currently Reading</Menu.Item>\n      <Menu.Item key=\"2\">Want to Read</Menu.Item>\n      <Menu.Item key=\"3\">Read</Menu.Item>\n      <Menu.Item key=\"4\">None</Menu.Item>\n    </Menu>\n  );\n\n  const card = (\n    <div className=\"shelf-books__book\" onClick={handleCardClick}>\n      <Card\n        bordered\n        hoverable\n        style={{ width: 240 }}\n        cover={<img alt=\"example\" src={book.imageLinks ? book.imageLinks.thumbnail:\"https://via.placeholder.com/240x300\"} />}\n      >\n        <Meta\n          className=\"book-title-bottom book-description\"\n          title={book.title}\n          description={\n            book.subtitle\n              ? book.subtitle.length >= 50 ? book.subtitle.slice(0, 45).concat(\"...\") : book.subtitle\n              : book.description\n              ? book.description.slice(0, 45).concat(\"...\")\n              : null\n          }\n        ></Meta>\n        <Dropdown overlay={menu}>\n          <Button\n            className=\"book-card-move-button\"\n            type=\"primary\"\n            shape=\"circle\"\n            icon={<DownCircleFilled />}\n            size=\"large\"\n          ></Button>\n        </Dropdown>\n      </Card>\n    </div>\n  );\n\n  return (\n    <div>\n      {clickCard.isClicked ? (\n        <Redirect push to={`${process.env.PUBLIC_URL}/book/${book.id}`}>\n          {card}\n        </Redirect>\n      ) : (\n        card\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Layout, Button, Affix } from 'antd';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport noSearchEmptyState from '../../icons/searchEmptyState.png';\nimport { SearchState, TypeBook, FilteredBooks } from '../../lib/types';\nimport { Book } from '../Shelves/Shelf/components/Book';\nimport { search } from '../../BooksAPI';\n\nconst { Header, Content } = Layout;\n\ninterface Props {\n  onMoveBook: (book: TypeBook, shelfName: string) => void;\n  onShowBook: (book: TypeBook) => void;\n}\n\nexport const SearchList = ({ onShowBook, onMoveBook }: Props) => {\n  //Search State\n  const [searchState, setSearchState] = useState<SearchState>({\n    query: '',\n  });\n\n  const [filteredBooks, setFilteredBooks] = useState<FilteredBooks>({\n    books: [],\n  });\n\n  const handleSearch = (event: any) => {\n    setSearchState({ query: event.target.value });\n    searchBooks(searchState.query);\n  };\n\n  const searchBooks = async (query: string) => {\n    const searchedBooks = await search(searchState.query);\n    setFilteredBooks({\n      books: searchedBooks,\n    });\n  };\n\n  const emptyState = (\n    <div className=\"empty-state__no-search\">\n      <img alt=\"Empty State Holder\" src={noSearchEmptyState} />\n    </div>\n  );\n\n  return (\n    <div>\n      <Affix className=\"header-affix\">\n        <Header className=\"search-header header\">\n          <Link to={`${process.env.PUBLIC_URL}/search`} className=\"search-link\">\n            <input\n              className=\"search\"\n              type=\"text\"\n              name=\"search\"\n              placeholder=\"Search books here..\"\n              onChange={handleSearch}\n            />\n          </Link>\n        </Header>\n      </Affix>\n      <Content className=\"content search-content\">\n        <Link to={`${process.env.PUBLIC_URL}/`}>\n          <Button\n            style={{\n              position: 'fixed',\n              left: '20px',\n              top: '85px',\n              width: '50px',\n              height: '50px',\n            }}\n            type=\"primary\"\n            shape=\"circle\"\n            icon={<ArrowLeftOutlined />}\n            size=\"large\"\n          ></Button>\n        </Link>\n        {searchState.query === '' ? (\n          emptyState\n        ) : (\n          <div className=\"shelf-books\">\n            {Array.isArray(filteredBooks.books)\n              ? filteredBooks.books.map((book) => {\n                  return (\n                    <Book\n                      key={book.id}\n                      book={book}\n                      onMoveBook={onMoveBook}\n                      showBook={onShowBook}\n                    />\n                  );\n                })\n              : emptyState}\n          </div>\n        )}\n      </Content>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Layout, Typography, Rate, Button } from 'antd';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport { TypeBook } from '../../lib/types';\n\nconst { Content } = Layout;\n\nconst { Title, Text } = Typography;\n\ninterface Props {\n  book: TypeBook | null;\n}\n\nexport const BookPage = ({ book }: Props) => {\n  const notGiven = <span>Not Given</span>;\n\n  return (\n    <Content className=\"book-page-content \">\n      {book ? (\n        <div className=\"book-page-layout\">\n          <Link to={`${process.env.PUBLIC_URL}/`}>\n            <Button\n              style={{\n                position: 'fixed',\n                left: '20px',\n                top: '85px',\n                width: '50px',\n                height: '50px',\n              }}\n              type=\"primary\"\n              shape=\"circle\"\n              icon={<ArrowLeftOutlined />}\n              size=\"large\"\n            ></Button>\n          </Link>\n          <img\n            className=\"book-page-content-img\"\n            src={book?.imageLinks.smallThumbnail}\n            alt={book?.title}\n          />\n          <div className=\"book-page-details\">\n            <Title level={2}>{book?.title}</Title>\n            <div>\n              <h3>{book?.subtitle}</h3>\n              {book.authors[0] ? (\n                <Text type=\"secondary\">By {book?.authors[0]}</Text>\n              ) : null}\n            </div>\n            <p>{book?.description.slice(0, 200).concat('...')}</p>\n            <p>\n              <span className=\"book-page-details-label\">Shelf Name: </span>\n              {book.shelf ? book.shelf : notGiven}\n            </p>\n            <p>\n              <span className=\"book-page-details-label\">Published Date: </span>\n              {book.publishedDate ? book.publishedDate : notGiven}\n            </p>\n            <div style={{ marginBottom: '14px' }}>\n              <span className=\"book-page-details-label\">Average Rating: </span>\n              {book.averageRating ? (\n                <Rate\n                  disabled\n                  defaultValue={Math.round(book?.averageRating)}\n                ></Rate>\n              ) : (\n                notGiven\n              )}\n            </div>\n            <p>\n              <span className=\"book-page-details-label\">Ratings Count: </span>\n              {book.ratingsCount ? book.ratingsCount : notGiven}\n            </p>\n            <p>\n              <span className=\"book-page-details-label\">Info Link: </span>\n              {book.infoLink ? (\n                <a href={book.infoLink} target=\"blank\">\n                  {' '}\n                  {book.infoLink.slice(0, 40).concat('...')}{' '}\n                </a>\n              ) : (\n                notGiven\n              )}\n            </p>\n          </div>\n        </div>\n      ) : null}\n    </Content>\n  );\n};\n","import React from 'react';\nimport { Result, Button } from 'antd';\nimport { Link } from 'react-router-dom';\n\nexport const NotFound = () => {\n  return (\n    <Result\n      status=\"404\"\n      title=\"404\"\n      subTitle=\"Sorry, the page you visited does not exist.\"\n      extra={\n        <Link to={`${process.env.PUBLIC_URL}/`}>\n          <Button type=\"primary\">Back Home</Button>\n        </Link>\n      }\n    />\n  );\n};\n","import React from 'react';\nimport { Typography, Divider, Empty } from 'antd';\nimport { Book } from './components/Book';\nimport { TypeShelf, TypeBook } from '../../../lib/types';\nimport NoBooksPlaceholder from '../../../icons/No_books.png';\n\nconst { Title, Text } = Typography;\n\ninterface Props {\n  shelf: TypeShelf;\n  onMoveBook: (book: TypeBook, shelfName: string) => void;\n  showBook: (book: TypeBook) => void;\n}\n\nexport const Shelf = ({ shelf, onMoveBook, showBook }: Props) => {\n  let noReadData = null;\n  let noWantToReadData = null;\n  let noCurrentlyReadingData = null;\n\n  const emptyDescription = (\n    <div>\n      <Title level={4}>Whoops!</Title>\n      <Text style={{ display: 'block' }} type=\"secondary\">\n        We can't find any books in this Shelf.\n      </Text>\n      <Text type=\"secondary\"> Add some books to see them.</Text>\n    </div>\n  );\n\n  if (shelf.books?.length === 0) {\n    noReadData =\n      shelf.shelfName === 'Read' ? (\n        <Empty\n          image={NoBooksPlaceholder}\n          imageStyle={{ height: 120 }}\n          description={emptyDescription}\n        />\n      ) : null;\n    noWantToReadData =\n      shelf.shelfName === 'Want To Read' ? (\n        <Empty\n          image={NoBooksPlaceholder}\n          imageStyle={{ height: 120 }}\n          description={emptyDescription}\n        />\n      ) : null;\n    noCurrentlyReadingData =\n      shelf.shelfName === 'Currently Reading' ? (\n        <Empty\n          image={NoBooksPlaceholder}\n          imageStyle={{ height: 120 }}\n          description={emptyDescription}\n        />\n      ) : null;\n  }\n  return (\n    <div className=\"shelf-content\">\n      <Title className=\"shelf-title\" level={2}>\n        {shelf.shelfName}\n      </Title>\n      <Divider className=\"divider\" />\n      <div className=\"shelf-books\">\n        {noReadData}\n        {noWantToReadData}\n        {noCurrentlyReadingData}\n        {shelf.books?.map((book) => (\n          <Book key={book.id} book={book} onMoveBook={onMoveBook} showBook={showBook} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Shelf } from './Shelf/Shelf';\nimport { TypeBook, TypeShelves } from '../../lib/types';\n\n\ninterface Props {\n  state: TypeShelves;\n  onMoveBook: (book: TypeBook, shelfName: string) => void;\n  showBook: (book: TypeBook) => void;\n}\n\n\nexport const Shelves = ({state, onMoveBook, showBook}: Props) => {\n  return (\n    <div>\n      <Shelf\n        shelf={state.currentlyReading}\n        onMoveBook={onMoveBook}\n        showBook={showBook}\n      />\n      <Shelf\n        shelf={state.wantToRead}\n        onMoveBook={onMoveBook}\n        showBook={showBook}\n      />\n      <Shelf shelf={state.read} onMoveBook={onMoveBook} showBook={showBook} />\n    </div>\n  );\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { Layout, Spin, Button } from 'antd';\nimport './App.css';\nimport { TypeBook, TypeShelves, ShowBookState } from './lib/types';\nimport { update, getAll } from './BooksAPI';\nimport { LayoutHeader } from './sections/Header/Header';\nimport { LayoutFooter } from './sections/Footer/Footer';\nimport { SearchList } from './sections/Search/SearchList';\nimport { BookPage } from './sections/BookPage/BookPage';\nimport { NotFound } from './sections/NotFound/NotFound';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Shelves } from './sections/Shelves/Shelves';\n\nconst { Content } = Layout;\n\nfunction App() {\n  //App State\n  const [state, setState] = useState<TypeShelves>({\n    currentlyReading: { shelfName: 'Currently Reading', books: null },\n    wantToRead: { shelfName: 'Want To Read', books: null },\n    read: { shelfName: 'Read', books: null },\n    loading: true,\n  });\n\n  //Book Page State\n  const [showBookState, setShowBookState] = useState<ShowBookState>({\n    book: null,\n  });\n\n  const getAllBooks = async () => {\n    const books: TypeBook[] = await getAll();\n    const currentlyReadingData: TypeBook[] = [];\n    const wantToReadData: TypeBook[] = [];\n    const readData: TypeBook[] = [];\n\n    for (const book of books) {\n      if (book.shelf === 'currentlyReading') {\n        currentlyReadingData.push(book);\n      } else if (book.shelf === 'wantToRead') {\n        wantToReadData.push(book);\n      } else {\n        readData.push(book);\n      }\n    }\n\n    setState({\n      currentlyReading: {\n        shelfName: 'Currently Reading',\n        books: currentlyReadingData,\n      },\n      wantToRead: { shelfName: 'Want To Read', books: wantToReadData },\n      read: { shelfName: 'Read', books: readData },\n      loading: false,\n    });\n  };\n\n  useEffect(() => {\n    getAllBooks();\n  }, []);\n\n  const moveBook = useCallback(async (book: TypeBook, shelfName: string) => {\n    await update(book, shelfName);\n    getAllBooks();\n  }, []);\n\n  const showBook = (book: TypeBook) => {\n    setShowBookState({ book });\n  };\n\n  return (\n    <Router>\n      <Layout className=\"container layout\">\n        <div className=\"wrapper\">\n          <Switch>\n            <Route exact path={`${process.env.PUBLIC_URL}/`}>\n              <LayoutHeader />\n              <Content className=\"content\">\n                {state.loading ? (\n                  <Spin size=\"large\" className=\"spinner\" />\n                ) : (\n                  <Shelves\n                    state={state}\n                    onMoveBook={moveBook}\n                    showBook={showBook}\n                  />\n                )}\n                <Link to={`${process.env.PUBLIC_URL}/search`}>\n                  <Button\n                    style={{\n                      position: 'fixed',\n                      right: '25px',\n                      bottom: '25px',\n                      width: '50px',\n                      height: '50px',\n                    }}\n                    type=\"primary\"\n                    shape=\"circle\"\n                    icon={<PlusOutlined />}\n                    size=\"large\"\n                  ></Button>\n                </Link>\n              </Content>\n            </Route>\n            <Route exact path={`${process.env.PUBLIC_URL}/search`}>\n              <SearchList onMoveBook={moveBook} onShowBook={showBook} />\n            </Route>\n            <Route exact path={`${process.env.PUBLIC_URL}/book/:id`}>\n              <LayoutHeader />\n              <BookPage book={showBookState.book} />\n            </Route>\n            <Route>\n              <NotFound />\n            </Route>\n          </Switch>\n        </div>\n        <LayoutFooter />\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/No_books.04ae4764.png\";"],"sourceRoot":""}